// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScrumGroup.Data;

#nullable disable

namespace ScrumGroup.Migrations
{
    [DbContext(typeof(ReligionDbContext))]
    partial class ReligionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("ScrumGroup.Data.Discussion", b =>
                {
                    b.Property<int>("DiscussionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimePosted")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscussionId");

                    b.HasIndex("UserId");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("ScrumGroup.Data.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReligionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LocationId");

                    b.HasIndex("ReligionId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ScrumGroup.Data.Religion", b =>
                {
                    b.Property<int>("ReligionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReligionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReligionID");

                    b.ToTable("Religions");
                });

            modelBuilder.Entity("ScrumGroup.Data.StudyGuide", b =>
                {
                    b.Property<int>("GuideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReligionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Response1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Response2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Response3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Response4")
                        .HasColumnType("TEXT");

                    b.Property<string>("Response5")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuideId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("UserId");

                    b.ToTable("StudyGuides");
                });

            modelBuilder.Entity("ScrumGroup.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReligionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("ReligionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ScrumGroup.Data.Discussion", b =>
                {
                    b.HasOne("ScrumGroup.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ScrumGroup.Data.Location", b =>
                {
                    b.HasOne("ScrumGroup.Data.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Religion");
                });

            modelBuilder.Entity("ScrumGroup.Data.StudyGuide", b =>
                {
                    b.HasOne("ScrumGroup.Data.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScrumGroup.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Religion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ScrumGroup.Data.User", b =>
                {
                    b.HasOne("ScrumGroup.Data.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Religion");
                });
#pragma warning restore 612, 618
        }
    }
}
